#!/usr/bin/ruby
#encoding: UTF-8

require 'rubygems'
require 'sonos'
require 'awesome_print'
require 'terminal-table'

@threshold = 16
@rows = []

system = Sonos::System.new # Auto-discovers your system
system.speakers.each do |sp|
  temp = [sp.ip, sp.name, sp.volume]
  
  if sp.now_playing.nil? or sp.now_playing.empty?
    temp.push('n/a')
    temp.push('n/a')
  else
    title = sp.now_playing[:title]
    track_duration = sp.now_playing[:track_duration]
    current_position = sp.now_playing[:current_position]

	track_hours, track_minutes, track_seconds = track_duration.split(':').map{|i| i.to_i }
	curr_hours, curr_minutes, curr_seconds = current_position.split(':').map{|i| i.to_i }

	# ignore hours
	next if track_hours > 0

	track_total_seconds = track_minutes*60+track_seconds
	current_second = curr_minutes*60+curr_seconds

    temp.push("#{current_second} / #{track_total_seconds}")
    temp.push(title)

	if sp.volume.to_i > @threshold and ARGV.length > 0
		if (track_total_seconds - current_second).abs <= 8
			puts "Volume threshold reached. Lowering by 1 unit"
			sp.volume = (sp.volume.to_i - 1)
		end
	end
  end

 @rows.push(temp) 
end

headings = %w(ip name volume position title)
table = Terminal::Table.new :headings => headings, :rows => @rows
puts table
